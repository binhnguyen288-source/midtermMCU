ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "common.h"
  25:Core/Src/main.c **** #include "button.h"
  26:Core/Src/main.c **** #include "timer.h"
  27:Core/Src/main.c **** #include "7SEG.h"
  28:Core/Src/main.c **** #include "fsm.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_TIM2_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** int counter = 0;
  64:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
  65:Core/Src/main.c ****   getRESETInput();
  66:Core/Src/main.c ****   getINCInput();
  67:Core/Src/main.c ****   getDECInput();
  68:Core/Src/main.c ****   runTimer10(); // for COUNTDOWN
  69:Core/Src/main.c ****   runTimer1(); // for BLINKING LED
  70:Core/Src/main.c **** }
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_TIM2_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     int timer1_flag = isTimer1Flag();
 113:Core/Src/main.c ****     int timer10_flag = isTimer10Flag();
 114:Core/Src/main.c ****     int incPressed = isINCPressed();
 115:Core/Src/main.c ****     int decPressed = isDECPressed();
 116:Core/Src/main.c ****     int resetPressed = isRESETPressed();
 117:Core/Src/main.c ****     int incLongPressed = isINCLongPressed();
 118:Core/Src/main.c ****     int decLongPressed = isDECLongPressed();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     if (timer1_flag) HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     fsmstep1(incPressed, decPressed, resetPressed);
 123:Core/Src/main.c ****     fsmstep2(incLongPressed, decLongPressed);
 124:Core/Src/main.c ****     fsmstep3(timer10_flag);
 125:Core/Src/main.c ****     display7SEG(counter);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     /* USER CODE END WHILE */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 144:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 150:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /**
 171:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 172:Core/Src/main.c ****   * @param None
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** static void MX_TIM2_Init(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 183:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 188:Core/Src/main.c ****   htim2.Instance = TIM2;
 189:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 190:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 191:Core/Src/main.c ****   htim2.Init.Period = 9;
 192:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 193:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 194:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 199:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 204:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 5


 205:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief GPIO Initialization Function
 217:Core/Src/main.c ****   * @param None
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** static void MX_GPIO_Init(void)
 221:Core/Src/main.c **** {
  26              		.loc 1 221 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 222:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 222 3 view .LVU1
  43              		.loc 1 222 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 225:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 225 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 225 3 view .LVU4
  52              		.loc 1 225 3 view .LVU5
  53 0010 204B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 225 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 225 3 view .LVU7
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 6


  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 225 3 view .LVU8
 226:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 226 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 226 3 view .LVU10
  68              		.loc 1 226 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 226 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 226 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 226 3 view .LVU14
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  80              		.loc 1 229 3 view .LVU15
  81 0036 184E     		ldr	r6, .L3+4
  82 0038 2246     		mov	r2, r4
  83 003a 2021     		movs	r1, #32
  84 003c 3046     		mov	r0, r6
  85 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 232:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  87              		.loc 1 232 3 view .LVU16
  88 0042 164F     		ldr	r7, .L3+8
  89 0044 2246     		mov	r2, r4
  90 0046 7F21     		movs	r1, #127
  91 0048 3846     		mov	r0, r7
  92 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 233:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 236:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
  94              		.loc 1 236 3 view .LVU17
  95              		.loc 1 236 23 is_stmt 0 view .LVU18
  96 004e 2023     		movs	r3, #32
  97 0050 0293     		str	r3, [sp, #8]
 237:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 237 3 is_stmt 1 view .LVU19
  99              		.loc 1 237 24 is_stmt 0 view .LVU20
 100 0052 0125     		movs	r5, #1
 101 0054 0395     		str	r5, [sp, #12]
 238:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 238 3 is_stmt 1 view .LVU21
 103              		.loc 1 238 24 is_stmt 0 view .LVU22
 104 0056 0494     		str	r4, [sp, #16]
 239:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 7


 105              		.loc 1 239 3 is_stmt 1 view .LVU23
 106              		.loc 1 239 25 is_stmt 0 view .LVU24
 107 0058 4FF00208 		mov	r8, #2
 108 005c CDF81480 		str	r8, [sp, #20]
 240:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 240 3 is_stmt 1 view .LVU25
 110 0060 02A9     		add	r1, sp, #8
 111 0062 3046     		mov	r0, r6
 112 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 PA8 */
 243:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8;
 114              		.loc 1 243 3 view .LVU26
 115              		.loc 1 243 23 is_stmt 0 view .LVU27
 116 0068 4FF4E073 		mov	r3, #448
 117 006c 0293     		str	r3, [sp, #8]
 244:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 118              		.loc 1 244 3 is_stmt 1 view .LVU28
 119              		.loc 1 244 24 is_stmt 0 view .LVU29
 120 006e 0394     		str	r4, [sp, #12]
 245:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 121              		.loc 1 245 3 is_stmt 1 view .LVU30
 122              		.loc 1 245 24 is_stmt 0 view .LVU31
 123 0070 0495     		str	r5, [sp, #16]
 246:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 246 3 is_stmt 1 view .LVU32
 125 0072 02A9     		add	r1, sp, #8
 126 0074 3046     		mov	r0, r6
 127 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL3:
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 249:Core/Src/main.c ****                            PB4 PB5 PB6 */
 250:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 129              		.loc 1 250 3 view .LVU33
 130              		.loc 1 250 23 is_stmt 0 view .LVU34
 131 007a 7F23     		movs	r3, #127
 132 007c 0293     		str	r3, [sp, #8]
 251:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 252:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 252 3 is_stmt 1 view .LVU35
 134              		.loc 1 252 24 is_stmt 0 view .LVU36
 135 007e 0395     		str	r5, [sp, #12]
 253:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 253 3 is_stmt 1 view .LVU37
 137              		.loc 1 253 24 is_stmt 0 view .LVU38
 138 0080 0494     		str	r4, [sp, #16]
 254:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 254 3 is_stmt 1 view .LVU39
 140              		.loc 1 254 25 is_stmt 0 view .LVU40
 141 0082 CDF81480 		str	r8, [sp, #20]
 255:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 255 3 is_stmt 1 view .LVU41
 143 0086 02A9     		add	r1, sp, #8
 144 0088 3846     		mov	r0, r7
 145 008a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 8


 146              	.LVL4:
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** }
 147              		.loc 1 257 1 is_stmt 0 view .LVU42
 148 008e 06B0     		add	sp, sp, #24
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 24
 151              		@ sp needed
 152 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 153              	.L4:
 154              		.align	2
 155              	.L3:
 156 0094 00100240 		.word	1073876992
 157 0098 00080140 		.word	1073809408
 158 009c 000C0140 		.word	1073810432
 159              		.cfi_endproc
 160              	.LFE69:
 162              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 163              		.align	1
 164              		.global	HAL_TIM_PeriodElapsedCallback
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	HAL_TIM_PeriodElapsedCallback:
 170              	.LVL5:
 171              	.LFB65:
  64:Core/Src/main.c ****   getRESETInput();
 172              		.loc 1 64 61 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Core/Src/main.c ****   getRESETInput();
 176              		.loc 1 64 61 is_stmt 0 view .LVU44
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  65:Core/Src/main.c ****   getINCInput();
 182              		.loc 1 65 3 is_stmt 1 view .LVU45
 183 0002 FFF7FEFF 		bl	getRESETInput
 184              	.LVL6:
  66:Core/Src/main.c ****   getDECInput();
 185              		.loc 1 66 3 view .LVU46
 186 0006 FFF7FEFF 		bl	getINCInput
 187              	.LVL7:
  67:Core/Src/main.c ****   runTimer10(); // for COUNTDOWN
 188              		.loc 1 67 3 view .LVU47
 189 000a FFF7FEFF 		bl	getDECInput
 190              	.LVL8:
  68:Core/Src/main.c ****   runTimer1(); // for BLINKING LED
 191              		.loc 1 68 3 view .LVU48
 192 000e FFF7FEFF 		bl	runTimer10
 193              	.LVL9:
  69:Core/Src/main.c **** }
 194              		.loc 1 69 3 view .LVU49
 195 0012 FFF7FEFF 		bl	runTimer1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 9


 196              	.LVL10:
  70:Core/Src/main.c **** 
 197              		.loc 1 70 1 is_stmt 0 view .LVU50
 198 0016 08BD     		pop	{r3, pc}
 199              		.cfi_endproc
 200              	.LFE65:
 202              		.section	.text.Error_Handler,"ax",%progbits
 203              		.align	1
 204              		.global	Error_Handler
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 209              	Error_Handler:
 210              	.LFB70:
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /* USER CODE END 4 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 265:Core/Src/main.c ****   * @retval None
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c **** void Error_Handler(void)
 268:Core/Src/main.c **** {
 211              		.loc 1 268 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ Volatile: function does not return.
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 269:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 270:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 271:Core/Src/main.c ****   __disable_irq();
 217              		.loc 1 271 3 view .LVU52
 218              	.LBB6:
 219              	.LBI6:
 220              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 10


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 11


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 12


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 221              		.loc 2 140 27 view .LVU53
 222              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 223              		.loc 2 142 3 view .LVU54
 224              		.syntax unified
 225              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 226 0000 72B6     		cpsid i
 227              	@ 0 "" 2
 228              		.thumb
 229              		.syntax unified
 230              	.L8:
 231              	.LBE7:
 232              	.LBE6:
 272:Core/Src/main.c ****   while (1)
 233              		.loc 1 272 3 discriminator 1 view .LVU55
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****   }
 234              		.loc 1 274 3 discriminator 1 view .LVU56
 272:Core/Src/main.c ****   while (1)
 235              		.loc 1 272 9 discriminator 1 view .LVU57
 236 0002 FEE7     		b	.L8
 237              		.cfi_endproc
 238              	.LFE70:
 240              		.section	.text.MX_TIM2_Init,"ax",%progbits
 241              		.align	1
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	MX_TIM2_Init:
 247              	.LFB68:
 176:Core/Src/main.c **** 
 248              		.loc 1 176 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 24
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 00B5     		push	{lr}
 253              	.LCFI4:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 14, -4
 256 0002 87B0     		sub	sp, sp, #28
 257              	.LCFI5:
 258              		.cfi_def_cfa_offset 32
 182:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 259              		.loc 1 182 3 view .LVU59
 182:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 260              		.loc 1 182 26 is_stmt 0 view .LVU60
 261 0004 0023     		movs	r3, #0
 262 0006 0293     		str	r3, [sp, #8]
 263 0008 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 13


 264 000a 0493     		str	r3, [sp, #16]
 265 000c 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c **** 
 266              		.loc 1 183 3 is_stmt 1 view .LVU61
 183:Core/Src/main.c **** 
 267              		.loc 1 183 27 is_stmt 0 view .LVU62
 268 000e 0093     		str	r3, [sp]
 269 0010 0193     		str	r3, [sp, #4]
 188:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 270              		.loc 1 188 3 is_stmt 1 view .LVU63
 188:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 271              		.loc 1 188 18 is_stmt 0 view .LVU64
 272 0012 1448     		ldr	r0, .L17
 273 0014 4FF08042 		mov	r2, #1073741824
 274 0018 0260     		str	r2, [r0]
 189:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 275              		.loc 1 189 3 is_stmt 1 view .LVU65
 189:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 276              		.loc 1 189 24 is_stmt 0 view .LVU66
 277 001a 41F63F72 		movw	r2, #7999
 278 001e 4260     		str	r2, [r0, #4]
 190:Core/Src/main.c ****   htim2.Init.Period = 9;
 279              		.loc 1 190 3 is_stmt 1 view .LVU67
 190:Core/Src/main.c ****   htim2.Init.Period = 9;
 280              		.loc 1 190 26 is_stmt 0 view .LVU68
 281 0020 8360     		str	r3, [r0, #8]
 191:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 282              		.loc 1 191 3 is_stmt 1 view .LVU69
 191:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 283              		.loc 1 191 21 is_stmt 0 view .LVU70
 284 0022 0922     		movs	r2, #9
 285 0024 C260     		str	r2, [r0, #12]
 192:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 286              		.loc 1 192 3 is_stmt 1 view .LVU71
 192:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 287              		.loc 1 192 28 is_stmt 0 view .LVU72
 288 0026 0361     		str	r3, [r0, #16]
 193:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 289              		.loc 1 193 3 is_stmt 1 view .LVU73
 193:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 290              		.loc 1 193 32 is_stmt 0 view .LVU74
 291 0028 8361     		str	r3, [r0, #24]
 194:Core/Src/main.c ****   {
 292              		.loc 1 194 3 is_stmt 1 view .LVU75
 194:Core/Src/main.c ****   {
 293              		.loc 1 194 7 is_stmt 0 view .LVU76
 294 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 295              	.LVL11:
 194:Core/Src/main.c ****   {
 296              		.loc 1 194 6 view .LVU77
 297 002e 90B9     		cbnz	r0, .L14
 198:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 298              		.loc 1 198 3 is_stmt 1 view .LVU78
 198:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 299              		.loc 1 198 34 is_stmt 0 view .LVU79
 300 0030 4FF48053 		mov	r3, #4096
 301 0034 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 14


 199:Core/Src/main.c ****   {
 302              		.loc 1 199 3 is_stmt 1 view .LVU80
 199:Core/Src/main.c ****   {
 303              		.loc 1 199 7 is_stmt 0 view .LVU81
 304 0036 02A9     		add	r1, sp, #8
 305 0038 0A48     		ldr	r0, .L17
 306 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 307              	.LVL12:
 199:Core/Src/main.c ****   {
 308              		.loc 1 199 6 view .LVU82
 309 003e 60B9     		cbnz	r0, .L15
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 310              		.loc 1 203 3 is_stmt 1 view .LVU83
 203:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 311              		.loc 1 203 37 is_stmt 0 view .LVU84
 312 0040 0023     		movs	r3, #0
 313 0042 0093     		str	r3, [sp]
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 314              		.loc 1 204 3 is_stmt 1 view .LVU85
 204:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 315              		.loc 1 204 33 is_stmt 0 view .LVU86
 316 0044 0193     		str	r3, [sp, #4]
 205:Core/Src/main.c ****   {
 317              		.loc 1 205 3 is_stmt 1 view .LVU87
 205:Core/Src/main.c ****   {
 318              		.loc 1 205 7 is_stmt 0 view .LVU88
 319 0046 6946     		mov	r1, sp
 320 0048 0648     		ldr	r0, .L17
 321 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 322              	.LVL13:
 205:Core/Src/main.c ****   {
 323              		.loc 1 205 6 view .LVU89
 324 004e 30B9     		cbnz	r0, .L16
 213:Core/Src/main.c **** 
 325              		.loc 1 213 1 view .LVU90
 326 0050 07B0     		add	sp, sp, #28
 327              	.LCFI6:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 4
 330              		@ sp needed
 331 0052 5DF804FB 		ldr	pc, [sp], #4
 332              	.L14:
 333              	.LCFI7:
 334              		.cfi_restore_state
 196:Core/Src/main.c ****   }
 335              		.loc 1 196 5 is_stmt 1 view .LVU91
 336 0056 FFF7FEFF 		bl	Error_Handler
 337              	.LVL14:
 338              	.L15:
 201:Core/Src/main.c ****   }
 339              		.loc 1 201 5 view .LVU92
 340 005a FFF7FEFF 		bl	Error_Handler
 341              	.LVL15:
 342              	.L16:
 207:Core/Src/main.c ****   }
 343              		.loc 1 207 5 view .LVU93
 344 005e FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 15


 345              	.LVL16:
 346              	.L18:
 347 0062 00BF     		.align	2
 348              	.L17:
 349 0064 00000000 		.word	.LANCHOR0
 350              		.cfi_endproc
 351              	.LFE68:
 353              		.section	.text.SystemClock_Config,"ax",%progbits
 354              		.align	1
 355              		.global	SystemClock_Config
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	SystemClock_Config:
 361              	.LFB67:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 362              		.loc 1 139 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 64
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 00B5     		push	{lr}
 367              	.LCFI8:
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 14, -4
 370 0002 91B0     		sub	sp, sp, #68
 371              	.LCFI9:
 372              		.cfi_def_cfa_offset 72
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 373              		.loc 1 140 3 view .LVU95
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 374              		.loc 1 140 22 is_stmt 0 view .LVU96
 375 0004 2822     		movs	r2, #40
 376 0006 0021     		movs	r1, #0
 377 0008 06A8     		add	r0, sp, #24
 378 000a FFF7FEFF 		bl	memset
 379              	.LVL17:
 141:Core/Src/main.c **** 
 380              		.loc 1 141 3 is_stmt 1 view .LVU97
 141:Core/Src/main.c **** 
 381              		.loc 1 141 22 is_stmt 0 view .LVU98
 382 000e 0023     		movs	r3, #0
 383 0010 0193     		str	r3, [sp, #4]
 384 0012 0293     		str	r3, [sp, #8]
 385 0014 0393     		str	r3, [sp, #12]
 386 0016 0493     		str	r3, [sp, #16]
 387 0018 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 388              		.loc 1 146 3 is_stmt 1 view .LVU99
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 389              		.loc 1 146 36 is_stmt 0 view .LVU100
 390 001a 0223     		movs	r3, #2
 391 001c 0693     		str	r3, [sp, #24]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 392              		.loc 1 147 3 is_stmt 1 view .LVU101
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 393              		.loc 1 147 30 is_stmt 0 view .LVU102
 394 001e 0123     		movs	r3, #1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 16


 395 0020 0A93     		str	r3, [sp, #40]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 396              		.loc 1 148 3 is_stmt 1 view .LVU103
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 397              		.loc 1 148 41 is_stmt 0 view .LVU104
 398 0022 1023     		movs	r3, #16
 399 0024 0B93     		str	r3, [sp, #44]
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 400              		.loc 1 149 3 is_stmt 1 view .LVU105
 150:Core/Src/main.c ****   {
 401              		.loc 1 150 3 view .LVU106
 150:Core/Src/main.c ****   {
 402              		.loc 1 150 7 is_stmt 0 view .LVU107
 403 0026 06A8     		add	r0, sp, #24
 404 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 405              	.LVL18:
 150:Core/Src/main.c ****   {
 406              		.loc 1 150 6 view .LVU108
 407 002c 68B9     		cbnz	r0, .L23
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 408              		.loc 1 157 3 is_stmt 1 view .LVU109
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 409              		.loc 1 157 31 is_stmt 0 view .LVU110
 410 002e 0F23     		movs	r3, #15
 411 0030 0193     		str	r3, [sp, #4]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 412              		.loc 1 159 3 is_stmt 1 view .LVU111
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 413              		.loc 1 159 34 is_stmt 0 view .LVU112
 414 0032 0021     		movs	r1, #0
 415 0034 0291     		str	r1, [sp, #8]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 416              		.loc 1 160 3 is_stmt 1 view .LVU113
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 417              		.loc 1 160 35 is_stmt 0 view .LVU114
 418 0036 0391     		str	r1, [sp, #12]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 419              		.loc 1 161 3 is_stmt 1 view .LVU115
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 420              		.loc 1 161 36 is_stmt 0 view .LVU116
 421 0038 0491     		str	r1, [sp, #16]
 162:Core/Src/main.c **** 
 422              		.loc 1 162 3 is_stmt 1 view .LVU117
 162:Core/Src/main.c **** 
 423              		.loc 1 162 36 is_stmt 0 view .LVU118
 424 003a 0591     		str	r1, [sp, #20]
 164:Core/Src/main.c ****   {
 425              		.loc 1 164 3 is_stmt 1 view .LVU119
 164:Core/Src/main.c ****   {
 426              		.loc 1 164 7 is_stmt 0 view .LVU120
 427 003c 01A8     		add	r0, sp, #4
 428 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 429              	.LVL19:
 164:Core/Src/main.c ****   {
 430              		.loc 1 164 6 view .LVU121
 431 0042 20B9     		cbnz	r0, .L24
 168:Core/Src/main.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 17


 432              		.loc 1 168 1 view .LVU122
 433 0044 11B0     		add	sp, sp, #68
 434              	.LCFI10:
 435              		.cfi_remember_state
 436              		.cfi_def_cfa_offset 4
 437              		@ sp needed
 438 0046 5DF804FB 		ldr	pc, [sp], #4
 439              	.L23:
 440              	.LCFI11:
 441              		.cfi_restore_state
 152:Core/Src/main.c ****   }
 442              		.loc 1 152 5 is_stmt 1 view .LVU123
 443 004a FFF7FEFF 		bl	Error_Handler
 444              	.LVL20:
 445              	.L24:
 166:Core/Src/main.c ****   }
 446              		.loc 1 166 5 view .LVU124
 447 004e FFF7FEFF 		bl	Error_Handler
 448              	.LVL21:
 449              		.cfi_endproc
 450              	.LFE67:
 452              		.section	.text.main,"ax",%progbits
 453              		.align	1
 454              		.global	main
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	main:
 460              	.LFB66:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 461              		.loc 1 79 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 466              	.LCFI12:
 467              		.cfi_def_cfa_offset 32
 468              		.cfi_offset 4, -32
 469              		.cfi_offset 5, -28
 470              		.cfi_offset 6, -24
 471              		.cfi_offset 7, -20
 472              		.cfi_offset 8, -16
 473              		.cfi_offset 9, -12
 474              		.cfi_offset 10, -8
 475              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 476              		.loc 1 87 3 view .LVU126
 477 0004 FFF7FEFF 		bl	HAL_Init
 478              	.LVL22:
  94:Core/Src/main.c **** 
 479              		.loc 1 94 3 view .LVU127
 480 0008 FFF7FEFF 		bl	SystemClock_Config
 481              	.LVL23:
 101:Core/Src/main.c ****   MX_TIM2_Init();
 482              		.loc 1 101 3 view .LVU128
 483 000c FFF7FEFF 		bl	MX_GPIO_Init
 484              	.LVL24:
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 18


 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 485              		.loc 1 102 3 view .LVU129
 486 0010 FFF7FEFF 		bl	MX_TIM2_Init
 487              	.LVL25:
 104:Core/Src/main.c **** 
 488              		.loc 1 104 3 view .LVU130
 489 0014 1848     		ldr	r0, .L30
 490 0016 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 491              	.LVL26:
 492 001a 13E0     		b	.L27
 493              	.LVL27:
 494              	.L29:
 495              	.LBB8:
 120:Core/Src/main.c **** 
 496              		.loc 1 120 22 discriminator 1 view .LVU131
 497 001c 2021     		movs	r1, #32
 498 001e 1748     		ldr	r0, .L30+4
 499              	.LVL28:
 120:Core/Src/main.c **** 
 500              		.loc 1 120 22 is_stmt 0 discriminator 1 view .LVU132
 501 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 502              	.LVL29:
 503              	.L26:
 122:Core/Src/main.c ****     fsmstep2(incLongPressed, decLongPressed);
 504              		.loc 1 122 5 is_stmt 1 view .LVU133
 505 0024 4A46     		mov	r2, r9
 506 0026 4146     		mov	r1, r8
 507 0028 3846     		mov	r0, r7
 508 002a FFF7FEFF 		bl	fsmstep1
 509              	.LVL30:
 123:Core/Src/main.c ****     fsmstep3(timer10_flag);
 510              		.loc 1 123 5 view .LVU134
 511 002e 3146     		mov	r1, r6
 512 0030 2846     		mov	r0, r5
 513 0032 FFF7FEFF 		bl	fsmstep2
 514              	.LVL31:
 124:Core/Src/main.c ****     display7SEG(counter);
 515              		.loc 1 124 5 view .LVU135
 516 0036 2046     		mov	r0, r4
 517 0038 FFF7FEFF 		bl	fsmstep3
 518              	.LVL32:
 125:Core/Src/main.c **** 
 519              		.loc 1 125 5 view .LVU136
 520 003c 104B     		ldr	r3, .L30+8
 521 003e 1868     		ldr	r0, [r3]
 522 0040 FFF7FEFF 		bl	display7SEG
 523              	.LVL33:
 524              	.LBE8:
 110:Core/Src/main.c ****   {
 525              		.loc 1 110 9 view .LVU137
 526              	.L27:
 110:Core/Src/main.c ****   {
 527              		.loc 1 110 3 view .LVU138
 528              	.LBB9:
 112:Core/Src/main.c ****     int timer10_flag = isTimer10Flag();
 529              		.loc 1 112 5 view .LVU139
 112:Core/Src/main.c ****     int timer10_flag = isTimer10Flag();
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 19


 530              		.loc 1 112 23 is_stmt 0 view .LVU140
 531 0044 FFF7FEFF 		bl	isTimer1Flag
 532              	.LVL34:
 533 0048 8246     		mov	r10, r0
 534              	.LVL35:
 113:Core/Src/main.c ****     int incPressed = isINCPressed();
 535              		.loc 1 113 5 is_stmt 1 view .LVU141
 113:Core/Src/main.c ****     int incPressed = isINCPressed();
 536              		.loc 1 113 24 is_stmt 0 view .LVU142
 537 004a FFF7FEFF 		bl	isTimer10Flag
 538              	.LVL36:
 113:Core/Src/main.c ****     int incPressed = isINCPressed();
 539              		.loc 1 113 24 view .LVU143
 540 004e 0446     		mov	r4, r0
 541              	.LVL37:
 114:Core/Src/main.c ****     int decPressed = isDECPressed();
 542              		.loc 1 114 5 is_stmt 1 view .LVU144
 114:Core/Src/main.c ****     int decPressed = isDECPressed();
 543              		.loc 1 114 22 is_stmt 0 view .LVU145
 544 0050 FFF7FEFF 		bl	isINCPressed
 545              	.LVL38:
 114:Core/Src/main.c ****     int decPressed = isDECPressed();
 546              		.loc 1 114 22 view .LVU146
 547 0054 0746     		mov	r7, r0
 548              	.LVL39:
 115:Core/Src/main.c ****     int resetPressed = isRESETPressed();
 549              		.loc 1 115 5 is_stmt 1 view .LVU147
 115:Core/Src/main.c ****     int resetPressed = isRESETPressed();
 550              		.loc 1 115 22 is_stmt 0 view .LVU148
 551 0056 FFF7FEFF 		bl	isDECPressed
 552              	.LVL40:
 115:Core/Src/main.c ****     int resetPressed = isRESETPressed();
 553              		.loc 1 115 22 view .LVU149
 554 005a 8046     		mov	r8, r0
 555              	.LVL41:
 116:Core/Src/main.c ****     int incLongPressed = isINCLongPressed();
 556              		.loc 1 116 5 is_stmt 1 view .LVU150
 116:Core/Src/main.c ****     int incLongPressed = isINCLongPressed();
 557              		.loc 1 116 24 is_stmt 0 view .LVU151
 558 005c FFF7FEFF 		bl	isRESETPressed
 559              	.LVL42:
 116:Core/Src/main.c ****     int incLongPressed = isINCLongPressed();
 560              		.loc 1 116 24 view .LVU152
 561 0060 8146     		mov	r9, r0
 562              	.LVL43:
 117:Core/Src/main.c ****     int decLongPressed = isDECLongPressed();
 563              		.loc 1 117 5 is_stmt 1 view .LVU153
 117:Core/Src/main.c ****     int decLongPressed = isDECLongPressed();
 564              		.loc 1 117 26 is_stmt 0 view .LVU154
 565 0062 FFF7FEFF 		bl	isINCLongPressed
 566              	.LVL44:
 117:Core/Src/main.c ****     int decLongPressed = isDECLongPressed();
 567              		.loc 1 117 26 view .LVU155
 568 0066 0546     		mov	r5, r0
 569              	.LVL45:
 118:Core/Src/main.c **** 
 570              		.loc 1 118 5 is_stmt 1 view .LVU156
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 20


 118:Core/Src/main.c **** 
 571              		.loc 1 118 26 is_stmt 0 view .LVU157
 572 0068 FFF7FEFF 		bl	isDECLongPressed
 573              	.LVL46:
 118:Core/Src/main.c **** 
 574              		.loc 1 118 26 view .LVU158
 575 006c 0646     		mov	r6, r0
 576              	.LVL47:
 120:Core/Src/main.c **** 
 577              		.loc 1 120 5 is_stmt 1 view .LVU159
 120:Core/Src/main.c **** 
 578              		.loc 1 120 8 is_stmt 0 view .LVU160
 579 006e BAF1000F 		cmp	r10, #0
 580 0072 D3D1     		bne	.L29
 581 0074 D6E7     		b	.L26
 582              	.L31:
 583 0076 00BF     		.align	2
 584              	.L30:
 585 0078 00000000 		.word	.LANCHOR0
 586 007c 00080140 		.word	1073809408
 587 0080 00000000 		.word	.LANCHOR1
 588              	.LBE9:
 589              		.cfi_endproc
 590              	.LFE66:
 592              		.global	counter
 593              		.global	htim2
 594              		.section	.bss.counter,"aw",%nobits
 595              		.align	2
 596              		.set	.LANCHOR1,. + 0
 599              	counter:
 600 0000 00000000 		.space	4
 601              		.section	.bss.htim2,"aw",%nobits
 602              		.align	2
 603              		.set	.LANCHOR0,. + 0
 606              	htim2:
 607 0000 00000000 		.space	72
 607      00000000 
 607      00000000 
 607      00000000 
 607      00000000 
 608              		.text
 609              	.Letext0:
 610              		.file 3 "c:\\stm32toolchain\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 611              		.file 4 "c:\\stm32toolchain\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 612              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 613              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 614              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 615              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 616              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 617              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 618              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 619              		.file 12 "Core/Inc/common.h"
 620              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 621              		.file 14 "Core/Inc/7SEG.h"
 622              		.file 15 "Core/Inc/fsm.h"
 623              		.file 16 "Core/Inc/button.h"
 624              		.file 17 "Core/Inc/timer.h"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 21


 625              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 626              		.file 19 "<built-in>"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:156    .text.MX_GPIO_Init:00000094 $d
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:163    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:169    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:203    .text.Error_Handler:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:209    .text.Error_Handler:00000000 Error_Handler
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:241    .text.MX_TIM2_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:246    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:349    .text.MX_TIM2_Init:00000064 $d
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:354    .text.SystemClock_Config:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:360    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:453    .text.main:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:459    .text.main:00000000 main
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:585    .text.main:00000078 $d
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:599    .bss.counter:00000000 counter
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:606    .bss.htim2:00000000 htim2
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:595    .bss.counter:00000000 $d
C:\Users\nguye\AppData\Local\Temp\ccsdwViS.s:602    .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
getRESETInput
getINCInput
getDECInput
runTimer10
runTimer1
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
fsmstep1
fsmstep2
fsmstep3
display7SEG
isTimer1Flag
isTimer10Flag
isINCPressed
isDECPressed
isRESETPressed
isINCLongPressed
isDECLongPressed
